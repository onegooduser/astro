---
import BlogPost from '../../layouts/BlogPost.astro';
import db from '../../db/setup';
import MarkdownIt from 'markdown-it';

const md = new MarkdownIt({
    html: true,
    breaks: true,
    linkify: true
});

const { slug } = Astro.params;

// Get post from database
const post = db.prepare('SELECT * FROM posts WHERE slug = ? AND draft = 0').get(slug);

if (!post) {
    return Astro.redirect('/404');
}

// Parse markdown content
const htmlContent = md.render(post.content);
---

<BlogPost {...post}>
    <div class="markdown-content" set:html={htmlContent} />
</BlogPost>

<style>
    .markdown-content {
        line-height: 1.6;
    }
    
    .markdown-content :global(h2) {
        color: rgb(var(--black));
        margin-top: 2em;
        margin-bottom: 1em;
    }

    .markdown-content :global(h3) {
        color: rgb(var(--black));
        margin-top: 1.5em;
        margin-bottom: 0.5em;
    }

    .markdown-content :global(p) {
        margin-bottom: 1em;
    }

    .markdown-content :global(ul) {
        margin-left: 2em;
        margin-bottom: 1em;
    }

    .markdown-content :global(li) {
        margin: 0.5em 0;
    }

    .markdown-content :global(code) {
        background-color: rgb(var(--gray-light));
        padding: 0.2em 0.4em;
        border-radius: 3px;
        font-size: 0.9em;
    }

    .markdown-content :global(pre) {
        background-color: rgb(var(--gray-light));
        padding: 1em;
        border-radius: 5px;
        overflow-x: auto;
        margin: 1em 0;
    }

    .markdown-content :global(pre code) {
        background-color: transparent;
        padding: 0;
    }

    .markdown-content :global(blockquote) {
        border-left: 4px solid rgb(var(--gray));
        margin: 1em 0;
        padding-left: 1em;
        color: rgb(var(--gray-dark));
    }

    .markdown-content :global(a) {
        color: rgb(var(--accent));
        text-decoration: none;
    }

    .markdown-content :global(a:hover) {
        text-decoration: underline;
    }

    .markdown-content :global(strong) {
        color: rgb(var(--black));
    }
</style>
